generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id     Int      @id @default(autoincrement())
  name   String   @unique
  Course Course[]
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(50)
  description String?      @db.VarChar(200)
  category    Int?
  Category    Category?    @relation(fields: [category], references: [id], onDelete: Cascade)
  Enrollment  Enrollment[]
  Lecture     Lecture[]
}

model Enrollment {
  id        Int     @id @default(autoincrement())
  user_id   Int?
  course_id Int?
  approved  Boolean @default(false)
  checked   Boolean @default(false)
  Course    Course? @relation(fields: [course_id], references: [id], onDelete: Cascade)
  User      User?   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Lecture {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(100)
  videoLink String?     @db.VarChar(400)
  content   String?     @db.VarChar(200)
  course_id Int?
  Course    Course?     @relation(fields: [course_id], references: [id], onDelete: Cascade)
  Statistic Statistic[]
}

model Statistic {
  id         Int      @id @default(autoincrement())
  user_id    Int?
  lecture_id Int?
  Lecture    Lecture? @relation(fields: [lecture_id], references: [id], onDelete: Cascade)
  User       User?    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model User {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(50)
  email      String       @unique @db.VarChar(100)
  password   String       @db.VarChar(100)
  photo      Bytes?
  role       Roles        @default(USER)
  Enrollment Enrollment[]
  Statistic  Statistic[]
}

enum Roles {
  ADMIN
  USER
}
